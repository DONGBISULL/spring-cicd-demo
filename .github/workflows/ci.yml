name: CI Pipeline

on:
  push:
    branches: [ main , develop ]
  pull_request:
    branches: [ main ]

env:
  # 환경변수 설정
  GIT_SHA: ${{ github.sha }}
  BUILD_TIME: ${{ github.event.head_commit.timestamp }}

# 작업 목록
jobs:
  test-job:
    runs-on: self-hosted
    steps:
      - name: 코드 받기
        uses: actions/checkout@v4
      - name: 테스트 실행
        run: ./gradlew test
  build-job:
    runs-on: self-hosted
    needs: test-job
    steps:
      # 현재 파일의 위치와 별개로 git action 워크플로우 파일 위치와 상관 없이 리포지토리 루트에서 실행
      - name: checkout source code
        uses: actions/checkout@v4

      - name: setup jdk
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'zulu'

      - name: Grant permission
        run: chmod +x ./gradlew
      # 테스트 잡에서 실행하는 부분 제외
      - name: Build with Gradle
        run: ./gradlew build -x test
  harbor-test:
    runs-on: self-hosted
    needs: test-job
    environment: env
    env:
      HARBOR_SCHEME: http
      HARBOR_REGISTRY: ${{ vars.HARBOR_REGISTRY }}
      HARBOR_PROJECT: ${{ vars.HARBOR_PROJECT }}
      HARBOR_USERNAME: ${{ secrets.HARBOR_USERNAME }}
      HARBOR_PASSWORD: ${{ secrets.HARBOR_PASSWORD }}

    steps:
      - name: Harbor Connection Test
        run: |
          set -e
          BASE_URL="${HARBOR_SCHEME}://${HARBOR_REGISTRY}"

          echo "시크릿 확인"
          echo "Harbor URL: $BASE_URL"
          echo "Project: $HARBOR_PROJECT"
          echo "Username: $HARBOR_USERNAME"

          echo " 연결 "
          if ! curl -f -s --connect-timeout 10 "$BASE_URL/api/v2.0/systeminfo" > /dev/null; then
            echo "Cannot connect to Harbor at $BASE_URL"
            echo "Check if Harbor is running and accessible from this runner"
            exit 1
          fi
          echo " Harbor is accessible"

          fi
