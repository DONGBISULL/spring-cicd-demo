name: CI Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  # 환경변수 설정
  GIT_SHA: ${{ github.sha }}
  BUILD_TIME: ${{ github.event.head_commit.timestamp }}

# 작업 목록
jobs:
  test-job:
    # github 의 가상 vm에서 실행됨
    runs-on: ubuntu-latest
    steps:
      - name: 코드 받기
        uses: actions/checkout@v4

      - name: JDK 21 설정
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'
      - name: 환경 변수 확인
        run: |
          echo "GIT_SHA: $GIT_SHA"
          echo "BUILD_TIME $BUILD_TIME"
          echo "Current time $(date -u + "%Y-%m-%dT%H:%M:%SZ")"
      - name: 테스트 실행
        run: ./gradlew test
        env:
          GIT_SHA: ${{ env.GIT_SHA }}
          BUILD_TIME: ${{ env.BUILD_TIME }}

  build-job:
    runs-on: ubuntu-latest
    needs: test-job        # test-job 완료 후 실행
    steps:
      - name: 코드 받기
        uses: actions/checkout@v4

      - name: JDK 21 설정
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: 빌드 실행
        uses: ./gradlew build
        env:
          GIT_SHA: ${{ env.GIT_SHA }}
          BUILD_TIME: ${{ env.BUILD_TIME }}

      - name: JAR 파일 업로드
        uses: actions/upload-artifact@v4
        with:
          name: jar-artifact
          path: build/libs/*/jar

  # 하버 관리 위헤 미리 지정
  docker-build-job:
    runs-on: ubuntu-latest
    needs: build-job
    steps:
      - name: 코드 받기
        uses: actions/checkout@v4

      - name: JAR 파일 다운로드
        uses: actions/download-artifact@v4
        with:
          name: jar-artifact
          path: build/libs/

      - name: 도커 이미지 빌드
        run: |
          echo "Building with GIT_SHA: $GIT_SHA"
          docker build -t my-app:$GIT_SHA .
          docker build -t my-app:latest .
        env:
          GIT_SHA: ${{ env.GIT_SHA }}